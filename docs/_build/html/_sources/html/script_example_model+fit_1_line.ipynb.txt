{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Modelling and fitting a single line spectrum"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# inline plotting for jupyter notebook. Do not put this line in a real python script.\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import orb.fit\n",
    "import pylab as pl\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Retrieve the observation parameters of a cube of data\n",
    "\n",
    "Basic observation parameters can be retrieved from any data cube. \n",
    "They are useful to simulate a spectrum which corresponds to your data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import base class for the manipulation of a SITELLE spectral cube: HDFCube\n",
    "from orcs.core import HDFCube"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[0mINFO| Data shape : (2048, 2064, 840)\u001b[0m\n",
      "\u001b[0mINFO| Cube is in WAVENUMBER (cm-1)\u001b[0m\n",
      "\u001b[0mINFO| Cube is CALIBRATED in wavenumber\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "step (scan step size in nm):  2943.025792\n",
      "order:  8\n",
      "resolution:  4733.11731899\n",
      "theta (incident angle at the center of the frame in degrees):  15.4447050003\n",
      "axis correction coefficient (calibration coefficient of the wavenumber axis which only depends on theta) 1.03746502972\n"
     ]
    }
   ],
   "source": [
    "# load spectral cube\n",
    "cube = HDFCube('/home/thomas/M31_SN3.merged.cm1.1.0.hdf5')\n",
    "print 'step (scan step size in nm): ', cube.params.step\n",
    "print 'order: ', cube.params.order\n",
    "print 'resolution: ', cube.params.resolution\n",
    "print 'theta (incident angle at the center of the frame in degrees): ', cube.params.theta_proj\n",
    "print 'axis correction coefficient (calibration coefficient of the wavenumber axis which only depends on theta)', cube.params.axis_corr"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Model a spectrum with one Halpha line"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(15200, 15270)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nkaT8f7PD4nWuiEjDAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7efc0aa0ffd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from orb.core import Lines\n",
    "halpha_cm1 = Lines().get_line_cm1('Halpha')\n",
    "\n",
    "step = 2943\n",
    "order = 8\n",
    "resolution = 5000\n",
    "theta = 15.5\n",
    "axis_corr = 1. / np.cos(np.deg2rad(theta))\n",
    "\n",
    "# model spectrum\n",
    "velocity = 250\n",
    "broadening = 15\n",
    "spectrum = orb.fit.create_cm1_lines_model([halpha_cm1], [1], step, order, resolution, theta, fmodel='sincgauss',\n",
    "                                           sigma=broadening, vel=velocity)\n",
    "\n",
    "# add noise\n",
    "spectrum += np.random.standard_normal(spectrum.shape) * 0.03\n",
    "\n",
    "spectrum_axis = orb.utils.spectrum.create_cm1_axis(np.size(spectrum), step, order, corr=axis_corr)\n",
    "\n",
    "pl.plot(spectrum_axis, spectrum)\n",
    "pl.xlim((15200, 15270))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Fit the spectrum with a classic Levenberg-Marquardt algorithm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "velocity (in km/s):  [239.5(1.2)]\n",
      "broadening (in km/s):  [9.6(3.8)]\n",
      "flux (in the unit of the spectrum amplitude / unit of the axis fwhm):  [0.781(50)]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7efc0a98d150>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7efc0aab3f10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "nm_laser = 543.5 # wavelength of the calibration laser, in fact it can be any real positive number (e.g. 1 is ok)\n",
    "# note: an apodization of 1 means: no apodization (which is the case here)\n",
    "#\n",
    "# pos_cov is the velocity of the lines in km/s. It is a covarying parameter,\n",
    "# because the reference position -i.e. the initial guess- of the lines is set\n",
    "# \n",
    "# sigma_guess is the initial guess on the broadening (in km/s)\n",
    "fit = orb.fit.fit_lines_in_spectrum(spectrum, [halpha_cm1], step, order, nm_laser, theta, 0, \n",
    "                                    wavenumber=True, apodization=1, fmodel='sincgauss',\n",
    "                                    pos_def=['1'],\n",
    "                                    pos_cov=velocity, sigma_guess=broadening)\n",
    "print 'velocity (in km/s): ', fit['velocity_gvar']\n",
    "print 'broadening (in km/s): ', fit['broadening_gvar']\n",
    "print 'flux (in the unit of the spectrum amplitude / unit of the axis fwhm): ', fit['flux_gvar']\n",
    "pl.plot(spectrum_axis, spectrum, label='real_spectrum')\n",
    "pl.plot(spectrum_axis, fit['fitted_vector'], label='fit')\n",
    "pl.xlim((15200, 15270))\n",
    "pl.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "orb",
   "language": "python",
   "name": "orb"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.14"
  },
  "toc": {
   "colors": {
    "hover_highlight": "#DAA520",
    "navigate_num": "#000000",
    "navigate_text": "#333333",
    "running_highlight": "#FF0000",
    "selected_highlight": "#FFD700",
    "sidebar_border": "#EEEEEE",
    "wrapper_background": "#FFFFFF"
   },
   "moveMenuLeft": true,
   "nav_menu": {
    "height": "98px",
    "width": "252px"
   },
   "navigate_menu": true,
   "number_sections": true,
   "sideBar": true,
   "threshold": 4,
   "toc_cell": false,
   "toc_section_display": "block",
   "toc_window_display": false,
   "widenNotebook": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
